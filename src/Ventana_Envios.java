
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;

public class Ventana_Envios extends javax.swing.JFrame {

    Conector con = new Conector();
    private boolean modificar = false;
    private int id;

    public Ventana_Envios() {
        initComponents();
        actualizar();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        NMEnvios = new javax.swing.JFrame();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        entPeso = new javax.swing.JTextField();
        entDestino = new javax.swing.JTextField();
        btnAceptar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        cmbCliente = new javax.swing.JComboBox();
        cmbTransporte = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaPendientes = new javax.swing.JTable();
        btnNuevo = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        btnBorrar = new javax.swing.JButton();
        btnVolver = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        btnEnviado = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tablaEnviados = new javax.swing.JTable();

        NMEnvios.setMinimumSize(new java.awt.Dimension(500, 400));
        NMEnvios.setPreferredSize(new java.awt.Dimension(500, 400));

        jLabel10.setText("DNI_Transportista");

        jLabel11.setText("Peso");

        jLabel12.setText("Destino");

        btnAceptar.setText("Aceptar");
        btnAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarActionPerformed(evt);
            }
        });

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        jLabel13.setText("DNI_Cliente");

        cmbCliente.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cmbTransporte.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout NMEnviosLayout = new javax.swing.GroupLayout(NMEnvios.getContentPane());
        NMEnvios.getContentPane().setLayout(NMEnviosLayout);
        NMEnviosLayout.setHorizontalGroup(
            NMEnviosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, NMEnviosLayout.createSequentialGroup()
                .addContainerGap(56, Short.MAX_VALUE)
                .addGroup(NMEnviosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(NMEnviosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(NMEnviosLayout.createSequentialGroup()
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmbCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(NMEnviosLayout.createSequentialGroup()
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmbTransporte, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(entPeso, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(NMEnviosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(NMEnviosLayout.createSequentialGroup()
                                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(entDestino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(NMEnviosLayout.createSequentialGroup()
                                .addComponent(btnAceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(52, 52, 52))
        );

        NMEnviosLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cmbCliente, cmbTransporte, entDestino, entPeso});

        NMEnviosLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel10, jLabel11, jLabel12, jLabel13});

        NMEnviosLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnAceptar, btnCancelar});

        NMEnviosLayout.setVerticalGroup(
            NMEnviosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(NMEnviosLayout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addGroup(NMEnviosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(NMEnviosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbTransporte, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(NMEnviosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(entPeso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(NMEnviosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(entDestino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addGap(49, 49, 49)
                .addGroup(NMEnviosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAceptar))
                .addContainerGap(49, Short.MAX_VALUE))
        );

        NMEnviosLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {cmbCliente, cmbTransporte, entDestino, entPeso});

        NMEnviosLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel10, jLabel11, jLabel12, jLabel13});

        NMEnviosLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnAceptar, btnCancelar});

        setMinimumSize(new java.awt.Dimension(500, 400));

        jScrollPane1.setBorder(javax.swing.BorderFactory.createTitledBorder("Pendientes de envio"));

        tablaPendientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Cliente", "Transportista", "Peso", "Destino"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaPendientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaPendientesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablaPendientes);

        btnNuevo.setText("Nuevo");
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });

        btnModificar.setText("Modificar");
        btnModificar.setEnabled(false);
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        btnBorrar.setText("Borrar");
        btnBorrar.setEnabled(false);
        btnBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarActionPerformed(evt);
            }
        });

        btnVolver.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cyan_left.gif"))); // NOI18N
        btnVolver.setText("Volver");
        btnVolver.setIconTextGap(5);
        btnVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolverActionPerformed(evt);
            }
        });

        btnEnviado.setText("Enviado");
        btnEnviado.setEnabled(false);
        btnEnviado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnviadoActionPerformed(evt);
            }
        });

        jScrollPane3.setBorder(javax.swing.BorderFactory.createTitledBorder("Entregado"));

        tablaEnviados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Cliente", "Transportista", "Peso", "Destino"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tablaEnviados);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 373, Short.MAX_VALUE)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.LEADING))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnNuevo, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE)
                            .addComponent(btnModificar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addComponent(btnBorrar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnEnviado, javax.swing.GroupLayout.Alignment.TRAILING))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnVolver)
                        .addContainerGap())))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnBorrar, btnEnviado, btnModificar, btnNuevo});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnModificar)
                        .addGap(18, 18, 18)
                        .addComponent(btnEnviado))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(55, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnBorrar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnVolver)
                        .addGap(27, 27, 27))))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnBorrar, btnEnviado, btnModificar, btnNuevo});

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVolverActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_btnVolverActionPerformed

    private void tablaPendientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaPendientesMouseClicked
        btnBorrar.setEnabled(true);
        btnModificar.setEnabled(true);
        btnEnviado.setEnabled(true);
    }//GEN-LAST:event_tablaPendientesMouseClicked

    private void btnEnviadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnviadoActionPerformed
        try {
            con.connect();
            int fila = tablaPendientes.getSelectedRow();
            id = Integer.parseInt("" + tablaPendientes.getValueAt(fila, 0));
            String sql = "UPDATE Envio SET \"Enviado\" = 'true' WHERE  \"ID\" = ?";
            PreparedStatement consulta = con.conect.prepareStatement(sql);
            consulta.setInt(1, id);
            consulta.execute();
            con.close();
            actualizar();
        } catch (SQLException ex) {
            System.err.println(ex.getMessage());
        }
        btnBorrar.setEnabled(false);
        btnModificar.setEnabled(false);
        btnEnviado.setEnabled(false);
    }//GEN-LAST:event_btnEnviadoActionPerformed

    private void btnAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarActionPerformed
        try {
            if (!modificar) {
                String dniCliente = (String) cmbCliente.getSelectedItem();
                String dniTransportista = (String) cmbTransporte.getSelectedItem();
                String direccion = entDestino.getText();
                int peso = Integer.parseInt(entPeso.getText());
                con.connect();
                String sql = "insert into Envio(DNI_Cliente,DNI_Transportista,Peso,Destino) values (?,?,?,?)";
                PreparedStatement consulta = con.conect.prepareStatement(sql);
                consulta.setString(1, dniCliente);
                consulta.setString(2, dniTransportista);
                consulta.setInt(3, peso);
                consulta.setString(4, direccion);
                consulta.execute();
                con.close();
                entDestino.setText("");
                entPeso.setText("");
                actualizar();
            } else {
                con.connect();
                String dniCliente = (String) cmbCliente.getSelectedItem();
                String dniTransportista = (String) cmbTransporte.getSelectedItem();
                String direccion = entDestino.getText();
                int peso = Integer.parseInt(entPeso.getText());
                String sql = "UPDATE Envio SET \"Peso\" = ?, \"Destino\" = ?, \"DNI_Transportista\" = ?, \"DNI_Cliente\" = ? WHERE  \"ID\" = ?";
                PreparedStatement consulta = con.conect.prepareStatement(sql);
                consulta.setInt(1, peso);
                consulta.setString(2, direccion);
                consulta.setString(3, dniTransportista);
                consulta.setString(4, dniCliente);
                consulta.setInt(5, id);
                consulta.execute();
                con.close();
                actualizar();
                btnBorrar.setEnabled(false);
                btnModificar.setEnabled(false);
                btnEnviado.setEnabled(false);
                NMEnvios.setVisible(false);
            }
        } catch (SQLException ex) {
            System.err.println(ex.getMessage());
        }
    }//GEN-LAST:event_btnAceptarActionPerformed

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        rellenarComboBox();
        entPeso.setText("");
        entDestino.setText("");
        modificar = false;
        btnBorrar.setEnabled(false);
        btnModificar.setEnabled(false);
        btnEnviado.setEnabled(false);
        NMEnvios.setLocationRelativeTo(this);
        NMEnvios.setVisible(true);
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        btnBorrar.setEnabled(false);
        btnModificar.setEnabled(false);
        btnEnviado.setEnabled(false);
        NMEnvios.setVisible(false);
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        rellenarComboBox();
        int fila = tablaPendientes.getSelectedRow();
        id = Integer.parseInt("" + tablaPendientes.getValueAt(fila, 0));
        cmbCliente.setSelectedItem(tablaPendientes.getValueAt(fila, 1));
        cmbTransporte.setSelectedItem(tablaPendientes.getValueAt(fila, 2));
        entPeso.setText("" + tablaPendientes.getValueAt(fila, 3));
        entDestino.setText((String) tablaPendientes.getValueAt(fila, 4));
        NMEnvios.setLocationRelativeTo(this);
        modificar = true;
        NMEnvios.setVisible(true);
    }//GEN-LAST:event_btnModificarActionPerformed

    private void btnBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarActionPerformed
        try {
            con.connect();
            int fila = tablaPendientes.getSelectedRow();
            PreparedStatement ps = con.conect.prepareStatement("delete from Envio WHERE  \"ID\" = ?");
            id = Integer.parseInt(""+ tablaPendientes.getValueAt(fila, 0));
            ps.setInt(1, id);
            ps.execute();
            con.close();
        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
            con.close();
        }
        actualizar();
        btnBorrar.setEnabled(false);
        btnModificar.setEnabled(false);
        btnEnviado.setEnabled(false);
    }//GEN-LAST:event_btnBorrarActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFrame NMEnvios;
    private javax.swing.JButton btnAceptar;
    private javax.swing.JButton btnBorrar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnEnviado;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JButton btnVolver;
    private javax.swing.JComboBox cmbCliente;
    private javax.swing.JComboBox cmbTransporte;
    private javax.swing.JTextField entDestino;
    private javax.swing.JTextField entPeso;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable tablaEnviados;
    private javax.swing.JTable tablaPendientes;
    // End of variables declaration//GEN-END:variables

    private void actualizar() {
        //Mostrar datos tabla envios pendientes
        try {
            DefaultTableModel model = (DefaultTableModel) tablaPendientes.getModel();
            con.connect();
            Statement consulta = con.conect.createStatement();
            ResultSet rs = consulta.executeQuery("select * from Envio where Enviado='false'");

            while (model.getRowCount() > 0) {
                model.removeRow(0);
            }
            while (rs.next()) {
                Object[] datos = new Object[5];
                datos[0] = rs.getInt(1);
                datos[1] = rs.getString(2);
                datos[2] = rs.getString(3);
                datos[3] = rs.getInt(4);
                datos[4] = rs.getString(5);
                model.addRow(datos);
            }
            con.close();
        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
            con.close();
        }
        //Mostrar datos envios entrgados
        try {
            DefaultTableModel model = (DefaultTableModel) tablaEnviados.getModel();
            con.connect();
            Statement consulta = con.conect.createStatement();
            ResultSet rs = consulta.executeQuery("select * from Envio where Enviado='true'");
            while (model.getRowCount() > 0) {
                model.removeRow(0);
            }
            while (rs.next()) {
                Object[] datos = new Object[5];
                datos[0] = rs.getInt(1);
                datos[1] = rs.getString(2);
                datos[2] = rs.getString(3);
                datos[3] = rs.getInt(4);
                datos[4] = rs.getString(5);
                model.addRow(datos);
            }
            con.close();
        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
            con.close();
        }
    }

    private void rellenarComboBox() {
        try {
            cmbCliente.removeAllItems(); //Vaciamos el JComboBox
            ArrayList<String> lista = new ArrayList<>();
            lista.add("");
            con.connect();
            Statement consulta = con.conect.createStatement();
            ResultSet rs = consulta.executeQuery("select * from Clientes");
            while (rs.next()) {
                lista.add(rs.getString("DNI"));//nombre es el campo de la base de datos
            }
            for (int i = 0; i < lista.size(); i++) {
                cmbCliente.addItem(lista.get(i));
            }
        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
            con.close();
        }
        //Rellenar Combo Box Transportistas
        try {
            cmbTransporte.removeAllItems(); //Vaciamos el JComboBox
            ArrayList<String> lista = new ArrayList<>();
            lista.add("");
            con.connect();
            Statement consulta = con.conect.createStatement();
            ResultSet rs = consulta.executeQuery("select * from Transportistas");
            while (rs.next()) {
                lista.add(rs.getString("DNI"));//nombre es el campo de la base de datos
            }
            for (int i = 0; i < lista.size(); i++) {
                cmbTransporte.addItem(lista.get(i));
            }
        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
            con.close();
        }
    }
}
